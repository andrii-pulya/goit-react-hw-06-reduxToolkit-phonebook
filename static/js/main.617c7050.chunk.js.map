{"version":3,"sources":["redux/slices/phonebookSlice.js","components/AddContactForm/AddContactForm.styled.jsx","components/AddContactForm/AddContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactList/ContactList.jsx","components/PageWrapper/PageWrapper.styled.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","App.js","store.js","index.js"],"names":["phonebookSlice","createSlice","name","initialState","items","JSON","parse","window","localStorage","getItem","id","number","filter","reducers","addContact","reducer","state","action","find","contact","payload","alert","prepare","nanoid","deleteContact","filterContact","value","actions","AddContactContainer","FormContainer","ItemFormLabel","ContactBtn","AddContactBtn","text","AddContactForm","dispatch","useDispatch","useState","setName","setNumber","handlechange","e","target","onSubmit","preventDefault","type","pattern","title","placeholder","autoComplete","onChange","required","ContactListContainer","Headline","ContactItemContainer","ContactItem","DeleteBtn","ItemName","ContactList","contacts","useSelector","shallowEqual","normalizedFilter","toLowerCase","visibleContacts","includes","length","map","onClick","PageWrapper","ContactFilterContainer","ContactFilterName","ContactFilterInput","ContactFilter","App","useEffect","setItem","stringify","configureStore","contactsReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.617c7050.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport const phonebookSlice = createSlice({\r\n  name: 'phonebook',\r\n  initialState: {\r\n    items: JSON.parse(window.localStorage.getItem('contacts')) ?? [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  },\r\n\r\n  reducers: {\r\n    addContact: {\r\n      reducer: (state, action) => {\r\n        if (\r\n          state.items.find((contact) => contact.name === action.payload.name)\r\n        ) {\r\n          alert(`${action.payload.name} is already in contacts`)\r\n          return false\r\n        }\r\n        return {\r\n          ...state,\r\n          items: [action.payload, ...state.items],\r\n        }\r\n      },\r\n      prepare: (name, number) => {\r\n        return {\r\n          payload: {\r\n            id: nanoid(),\r\n            name: name,\r\n            number: number,\r\n          },\r\n        }\r\n      },\r\n    },\r\n\r\n    deleteContact: {\r\n      reducer: (state, action) => {\r\n        return {\r\n          ...state,\r\n          items: [\r\n            ...state.items.filter((contact) => contact.id !== action.payload),\r\n          ],\r\n        }\r\n      },\r\n      prepare: (id) => {\r\n        return { payload: id }\r\n      },\r\n    },\r\n\r\n    filterContact: {\r\n      reducer: (state, action) => {\r\n        return {\r\n          ...state,\r\n          filter: action.payload,\r\n        }\r\n      },\r\n      prepare: (value) => {\r\n        return { payload: value }\r\n      },\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  addContact,\r\n  deleteContact,\r\n  filterContact,\r\n} = phonebookSlice.actions\r\n\r\nexport default phonebookSlice.reducer\r\n","import styled from '@emotion/styled/macro'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddContactContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  width: max-content;\r\n  align-items: center;\r\n`\r\nexport const FormContainer = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const ItemFormLabel = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ContactBtn = styled.button`\r\n  display: block;\r\n  padding: 5px;\r\n  margin: 10px 0px;\r\n  width: max-content;\r\n  coursor: pointer;\r\n  margin: 20px auto;\r\n`\r\n\r\nexport function AddContactBtn({ text }) {\r\n  return <ContactBtn>{text}</ContactBtn>\r\n}\r\n\r\nAddContactBtn.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addContact } from '../../redux/slices/phonebookSlice'\r\n\r\nimport {\r\n  AddContactContainer,\r\n  AddContactBtn,\r\n  FormContainer,\r\n  ItemFormLabel,\r\n} from './AddContactForm.styled'\r\n\r\nexport default function AddContactForm() {\r\n  const dispatch = useDispatch()\r\n\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  function submitContacts(e) {\r\n    e.preventDefault()\r\n    dispatch(addContact(name, number))\r\n    setName('')\r\n    setNumber('')\r\n  }\r\n\r\n  function handlechange(e) {\r\n    const { name, value } = e.target\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value)\r\n        break\r\n      case 'number':\r\n        setNumber(value)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AddContactContainer>\r\n        <h1>Phonebook</h1>\r\n        <FormContainer onSubmit={submitContacts}>\r\n          <ItemFormLabel>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              placeholder=\"Put the name here\"\r\n              autoComplete=\"off\"\r\n              value={name}\r\n              onChange={handlechange}\r\n              required\r\n            />\r\n          </ItemFormLabel>\r\n          <ItemFormLabel>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              placeholder=\"Put the number here\"\r\n              autoComplete=\"off\"\r\n              value={number}\r\n              onChange={handlechange}\r\n              required\r\n            />\r\n          </ItemFormLabel>\r\n          <AddContactBtn type=\"submit\" text={'Add contact'} />\r\n        </FormContainer>\r\n      </AddContactContainer>\r\n    </>\r\n  )\r\n}\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const ContactListContainer = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\nexport const Headline = styled.h2`\r\n  text-align: center;\r\n`\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const ContactItemContainer = styled.div`\r\n  display: flex;\r\n`\r\nexport const ContactItem = styled.li``\r\n\r\nexport const DeleteBtn = styled.button`\r\n  width: max-content;\r\n  padding: 3px 5px;\r\n`\r\nexport const ItemName = styled.p`\r\n  display: block;\r\n  width: 250px;\r\n  margin: 0;\r\n`\r\n","import { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { deleteContact } from '../../redux/slices/phonebookSlice'\r\n\r\nimport { ContactListContainer, Headline } from './ContactList.styled'\r\nimport {\r\n  ContactItemContainer,\r\n  ContactItem,\r\n  ItemName,\r\n  DeleteBtn,\r\n} from '../ContactItem/ContactItem.styled'\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector((state) => state.contacts.items, shallowEqual)\r\n  const filter = useSelector((state) => state.contacts.filter, shallowEqual)\r\n  const dispatch = useDispatch()\r\n\r\n  const normalizedFilter = filter.toLowerCase()\r\n  const visibleContacts = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <ContactListContainer>\r\n        {filter?.length === 0 && visibleContacts.length === 0 ? (\r\n          <Headline>You have not contacts saved</Headline>\r\n        ) : filter?.length !== 0 && visibleContacts.length === 0 ? (\r\n          <h1> Can not find the Contact</h1>\r\n        ) : (\r\n          <Headline>Contacts</Headline>\r\n        )}\r\n\r\n        {visibleContacts.map((contact) => (\r\n          <ContactItem key={contact.id}>\r\n            <ContactItemContainer>\r\n              <ItemName>\r\n                {contact.name}\r\n                {': '}\r\n                {contact.number}\r\n              </ItemName>\r\n              <DeleteBtn\r\n                onClick={() => dispatch(deleteContact(contact.id))}\r\n                type=\"button\"\r\n              >\r\n                Delete\r\n              </DeleteBtn>\r\n            </ContactItemContainer>\r\n          </ContactItem>\r\n        ))}\r\n      </ContactListContainer>\r\n    </>\r\n  )\r\n}\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const PageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n`\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const ContactFilterContainer = styled.label``\r\n\r\nexport const ContactFilterName = styled.p`\r\n  font-weight: 500;\r\n  font-style: italic;\r\n`\r\n\r\nexport const ContactFilterInput = styled.input``\r\n","import { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { filterContact } from '../../redux/slices/phonebookSlice'\r\n\r\nimport {\r\n  ContactFilterContainer,\r\n  ContactFilterInput,\r\n  ContactFilterName,\r\n} from './ContactFilter.styled'\r\n\r\nexport default function ContactFilter() {\r\n  const filter = useSelector((state) => state.contacts.filter, shallowEqual)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <ContactFilterContainer>\r\n      <ContactFilterName>Find contact by name</ContactFilterName>\r\n      <ContactFilterInput\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        autoComplete=\"off\"\r\n        value={filter}\r\n        onChange={(e) => dispatch(filterContact(e.target.value))}\r\n      />\r\n    </ContactFilterContainer>\r\n  )\r\n}\r\n","import './App.css'\n\nimport React, { useEffect } from 'react'\nimport { useSelector, shallowEqual } from 'react-redux'\n\nimport AddContactForm from './components/AddContactForm/AddContactForm.jsx'\nimport ContactList from './components/ContactList/ContactList.jsx'\nimport { PageWrapper } from './components/PageWrapper/PageWrapper.styled.jsx'\nimport ContactFilter from './components/ContactFilter/ContactFilter.jsx'\n\nexport default function App() {\n  const contacts = useSelector((state) => state.contacts.items, shallowEqual)\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  return (\n    <PageWrapper>\n      <AddContactForm />\n      <ContactFilter />\n      <ContactList />\n    </PageWrapper>\n  )\n}\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport contactsReducer from './redux/slices/phonebookSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport './index.css'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}